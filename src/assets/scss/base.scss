/* color palette from <https://github.com/vuejs/theme> */
:root {
  --vt-c-white: #ffffff;
  --vt-c-white-soft: #f8f8f8;
  --vt-c-white-mute: #f2f2f2;

  --vt-c-black: #181818;
  --vt-c-black-soft: #222222;
  --vt-c-black-mute: #282828;

  --vt-c-indigo: #2c3e50;

  --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
  --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
  --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
  --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);

  --vt-c-text-light-1: var(--vt-c-indigo);
  --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
  --vt-c-text-dark-1: var(--vt-c-white);
  --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
}

/* semantic color variables for this project */
:root {
  --color-background: var(--vt-c-white);
  --color-background-soft: var(--vt-c-white-soft);
  --color-background-mute: var(--vt-c-white-mute);

  --color-border: var(--vt-c-divider-light-2);
  --color-border-hover: var(--vt-c-divider-light-1);

  --color-heading: var(--vt-c-text-light-1);
  --color-text: var(--vt-c-text-light-1);

  --section-gap: 160px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-background: var(--vt-c-black);
    --color-background-soft: var(--vt-c-black-soft);
    --color-background-mute: var(--vt-c-black-mute);

    --color-border: var(--vt-c-divider-dark-2);
    --color-border-hover: var(--vt-c-divider-dark-1);

    --color-heading: var(--vt-c-text-dark-1);
    --color-text: var(--vt-c-text-dark-2);
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  font-weight: normal;
}

body {
  min-height: 100vh;
  color: var(--color-text);
  background: var(--color-background);
  transition:
    color 0.5s,
    background-color 0.5s;
  line-height: 1.6;
  font-family:
    Inter,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    'Fira Sans',
    'Droid Sans',
    'Helvetica Neue',
    sans-serif;
  font-size: 15px;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.container {
  --containerGutter: #{rem(12)};
  max-width: 100%;
  padding: 0 var(--containerGutter);
  margin: 0 auto;
  // @include media(md) {
  //   --containerGutter: #{rem(12)};
  //   padding: 0 var(--containerGutter);
  // }
  @each $key, $val in $container-max-widths {
    @include media($key) {
      max-width: calc($val + var(--containerGutter) * 2);
    }
  }
}

.d-none {
  display: none !important;
}
.d-block {
  display: block !important;
}
.d-flex {
  display: flex !important;
}
.align-items-center {
  align-items: center !important;
}
.ml-auto {
  margin-left: auto !important;
}

@each $key, $val in $grid-breakpoints {
  .d-#{$key}-none {
    @include media($key) {
      display: none !important;
    }
  }
  .d-#{$key}-block {
    @include media($key) {
      display: block !important;
    }
  }
  .d-#{$key}-flex {
    @include media($key) {
      display: flex !important;
    }
  }
  .align-items-#{$key}-center {
    @include media($key) {
      align-items: center !important;
    }
  }
  .ml-#{$key}-auto {
    @include media($key) {
      margin-left: auto !important;
    }
  }
}

.row {
  --gutter-y: 0;
  --gutter-x: 16px;

  display: flex;
  margin-right: calc(var(--gutter-x) / -2);
  margin-left: calc(var(--gutter-x) / -2);
  margin-top: calc(var(--gutter-y) * -1);
  & > * {
    margin-left: calc(var(--gutter-x) / 2);
    margin-right: calc(var(--gutter-x) / 2);
    margin-top: calc(var(--gutter-y) * 1);
  }
}
.col {
  flex: 1 0 0%;
  padding: 0;
}

.btn-wrap {
  margin-top: auto;
  // margin-top: 1rem;
  padding-top: 1rem;
  .pi {
    margin-right: 0.5rem;
  }

  .skeleton-btn,
  .p-button {
    margin-top: auto;
    width: 100%;
  }
  max-width: 20rem;
}
